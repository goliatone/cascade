# advanced.yaml - Full-featured configuration with all available options
# This configuration demonstrates all available Cascade configuration options.

# Workspace configuration - comprehensive workspace management
workspace:
  # Primary workspace directory for all operations
  path: "/var/cache/cascade"
  # Custom temporary directory for intermediate files
  temp_dir: "/tmp/cascade"
  # Default manifest file path
  manifest_path: "/var/cache/cascade/config/deps.yaml"

# Executor configuration - fine-tuned execution control
executor:
  # Extended timeout for complex operations
  timeout: "15m"
  # High concurrency for powerful systems
  concurrent_limit: 8
  # Enable dry-run mode by default (can be overridden by CLI flags)
  dry_run: false

# Integration configuration - full external service integration
integration:
  # GitHub integration settings
  github:
    # GitHub token (prefer environment variable CASCADE_GITHUB_TOKEN)
    token: ""
    # Custom GitHub Enterprise endpoint
    endpoint: "https://github.company.com/api/v3"
    # Default organization for operations
    organization: "engineering"

  # Slack integration for notifications
  slack:
    # Slack bot token (prefer environment variable CASCADE_SLACK_TOKEN)
    token: ""
    # Webhook URL for notifications
    webhook_url: "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"
    # Default notification channel
    channel: "#cascade-updates"

# Logging configuration - detailed logging setup
logging:
  # Detailed logging level
  level: "debug"
  # Structured JSON logging for log aggregation systems
  format: "json"
  # Verbose mode disabled (controlled by level)
  verbose: false
  # Quiet mode disabled
  quiet: false

# State management - comprehensive state persistence
state:
  # Custom state directory with more space
  dir: "/var/lib/cascade/state"
  # Retain more state snapshots for debugging
  retention_count: 25
  # State persistence enabled
  enabled: true

# Manifest generator configuration - defaults for manifest generation operations
manifest_generator:
  # Default workspace for discovering dependent modules
  default_workspace: "/var/lib/cascade/workspace"

  # Default branch name for dependency updates
  default_branch: "cascade/update-deps"

  # Test configuration defaults
  tests:
    # Default test command for discovered dependents
    command: "go test ./..."
    # Default timeout for test execution
    timeout: "10m"
    # Default working directory (empty uses module root)
    working_directory: ""

  # Notification defaults
  notifications:
    # Enable notifications by default
    enabled: true
    # Default notification channels
    channels: ["#engineering", "#cascade-updates"]
    # Notify on successful operations
    on_success: false
    # Notify on failed operations
    on_failure: true

  # Discovery settings for automatic dependent detection
  discovery:
    # Enable automatic discovery by default
    enabled: true
    # Maximum depth for workspace scanning
    max_depth: 5
    # Include patterns for discovery
    include_patterns: ["*.go", "go.mod", "go.sum"]
    # Exclude patterns for discovery
    exclude_patterns: ["vendor/*", ".git/*", "node_modules/*", "*_test.go"]
    # Prompt for confirmation of discovered dependents
    interactive: true

  # Template profiles for different use cases
  template_profiles:
    # Production profile with conservative settings
    production:
      name: "production"
      description: "Conservative settings for production dependencies"
      tests:
        command: "go test -race ./..."
        timeout: "20m"
      notifications:
        enabled: true
        on_success: true
        on_failure: true
      branch: "prod/update-deps"

    # Development profile with faster iteration
    development:
      name: "development"
      description: "Fast iteration settings for development dependencies"
      tests:
        command: "go test -short ./..."
        timeout: "5m"
      notifications:
        enabled: false
        on_success: false
        on_failure: true
      branch: "dev/update-deps"